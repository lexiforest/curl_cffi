name: Build, test and release
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
      - bugfix/*
      - feature/*
      - release/*
      - chore/*
    tags:
      - v*

permissions:
  contents: write

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: '3.9'
    - name: Lint
      run: |
        pip install mypy ruff
        make lint

  sdist:
    name: Build sdist wheel
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: build sdist
      run: |
        make preprocess
        pip install build
        python -m build --sdist
        pip install ./dist/*.tar.gz

    - name: upload artifacts
      uses: actions/upload-artifact@v4  # https://github.com/actions/upload-artifact/issues/478
      with:
        name: curl_cffi-${{ github.sha }}-sdist.zip
        path: ./dist/*.tar.gz

  bdist:
    name: Build bdist wheels and test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-24.04, macos-13, macos-14, windows-2022, windows-11-arm]
    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - if: runner.os == 'Linux'
      uses: docker/setup-qemu-action@v3
      with:
        platforms: all

    # macOS make is too old
    - if: runner.os == 'macOS'
      run: |
        brew install make automake libtool

    # When we build all dependencies with the 11.0 target, we can downgrade this back.
    - if: ${{ matrix.os == 'macos-14' }}
      run: echo "MACOSX_DEPLOYMENT_TARGET=14.0" >> "$GITHUB_ENV"

    - if: ${{ matrix.os == 'macos-13' }}
      run: echo "MACOSX_DEPLOYMENT_TARGET=13.0" >> "$GITHUB_ENV"

    - name: Build and test wheels
      uses: pypa/cibuildwheel@v3.1.3

    # - name: Setup tmate session
    #   uses: mxschmitt/action-tmate@v3

    - uses: actions/upload-artifact@v4  # https://github.com/actions/upload-artifact/issues/478
      with:
        name: curl_cffi-${{ github.sha }}-${{ matrix.os }}.zip
        path: ./wheelhouse/*.whl

  build_latest:
    name: Build bdist on latest OSes
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # For linux, it's built inside a container, no need to test for latest versions.
        os: [macos-latest, windows-latest, windows-11-arm]
    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - if: runner.os == 'Linux'
      uses: docker/setup-qemu-action@v3
      with:
        platforms: all

    # macOS make is too old
    - if: runner.os == 'macOS'
      run: |
        brew install make automake libtool

    - if: ${{ matrix.os == 'macos-latest' }}
      run: echo "MACOSX_DEPLOYMENT_TARGET=14.0" >> "$GITHUB_ENV"

    - name: Build and test wheels
      uses: pypa/cibuildwheel@v3.1.3


  upload_all:
    needs: [bdist, sdist]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v4.1.7  # https://github.com/actions/upload-artifact/issues/478
      if: startsWith(github.ref, 'refs/tags/')
      with:
        pattern: curl_cffi-*
        merge-multiple: true
        path: dist

    - uses: pypa/gh-action-pypi-publish@v1.12.4
      if: startsWith(github.ref, 'refs/tags/')
      with:
        password: ${{ secrets.PYPI_TOKEN }}
        packages-dir: dist/

    - name: Upload release files
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v2
      with:
        files: |
          ./dist/*.whl
          ./dist/*.tar.gz
